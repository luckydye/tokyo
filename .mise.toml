[tools]
bun = "1.0.33"
node = "21"
rust = "1.75.0"

[env]
_.path = ["./node_modules/.bin"]
RUST_BACKTRACE = "1"
RUST_LOG = "info,rawler=error"
DATABASE = "file:///tmp/tokyo.db"

[tasks.setup]
description = "Install dependencies"
sources = [
    ".mise.toml",
    "bun.lockb",
    "package.json",
    "Cargo.toml",
    "Cargo.lock",
    "**/package.json",
    ".env",
    ".env.example",
]
outputs = ["node_modules/**", "target/**"]
run = [
    "cp -n .env.example .env 2> /dev/null || true",
    "bun install",
    "mise run codegen",
    "cargo install cargo-watch",
    "cargo install wasm-pack",
    "cargo install tauri-cli --version '^2.0.0-alpha'",
    "cargo check",
]

[tasks."setup:ubuntu"]
description = "Install system dependencies"
run = [
    "sudo apt update",
    "sudo apt install -y libwebkit2gtk-4.1-dev build-essential curl wget file libssl-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev libsqlite3-dev",
    "mise run setup",
]

[tasks.codegen]
dir = "packages/proto"
run = ["cargo install protobuf-codegen", "cargo run --bin force-build"]

[tasks.dev]
description = "Run desktop app with server"
depends = ["setup"]
run = ["mise run dev:server ::: dev:desktop"]

[tasks."dev:server"]
description = "Run server"
dir = "apps/server"
run = ["mise run dev"]

[tasks."dev:desktop"]
description = "Run desktop app"
dir = "apps/server"
run = ["mise run dev"]

[tasks."dev:shadow"]
description = "Run shadow pacakge test"
dir = "packages/shadow"
depends = ["setup"]
run = ["cargo watch -x run"]

[tasks."dev:ios"]
description = "Run ios app in simulator"
depends = ["setup"]
run = ["mise run server:dev ::: app:dev:ios"]

[tasks.build]
description = "Build app"
depends = ["setup"]
run = ["mise run server:build ::: app:build"]

[tasks."build:docker"]
description = "Build docker image for library server"
run = [
    "docker buildx build --platform linux/amd64 -f apps/server/Dockerfile --tag luckydye/tokyo:latest .",
]

[tasks.check]
description = "Check files"
dir = "."
run = ["cargo check", "bun --bun x biome check --diagnostic-level=error ."]

[tasks.fix]
description = "Fix files"
run = ["bun --bun x biome check --diagnostic-level=error --apply-unsafe $root"]

[tasks.start]
description = "Run desktop app with server as production build"
depends = ["setup"]
run = ["mise run server:start ::: app:start"]
